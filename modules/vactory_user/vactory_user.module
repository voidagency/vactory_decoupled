<?php

/**
 * @file
 * Contain related hooks.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Site\Settings;
use Drupal\language\Entity\ConfigurableLanguage;

/**
 * Implements hook_preprocess_HOOK().
 */
function vactory_user_preprocess_page(&$variables)
{
  $theme = \Drupal::theme()->getActiveTheme();
  $theme_path = $theme->getPath();
  $language = Drupal::languageManager()->getCurrentLanguage();
  $isRTL = $language->getDirection() === ConfigurableLanguage::DIRECTION_RTL;
  $site_config = \Drupal::config('system.site');
  $account = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
  $logo = $isRTL ? 'logo-rtl.png' : 'logo-ltr.png';
  $logo_path = \Drupal::service('file_url_generator')->generateString($theme_path . '/' . $logo);
  $frontend_url = Settings::get('BASE_FRONTEND_URL');

  $variables['user'] = $account;
  $variables['site_name'] = $site_config->get('name');
  $variables['logo'] = $logo_path;
  $variables['frontend_url'] = $frontend_url;
}


/**
 * Implements hook_form_alter().
 */
function vactory_user_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
  $admin_route = \Drupal::service('router.admin_context')->isAdminRoute();
  if ($form_id === 'user_register_form' && !$admin_route) {
    $title = t("J'accepte les conditions générales d'utilisation du site");

    // @todo: interface settings.
    if (Settings::get('PAGE_CONDITION_GENERAL_URL')) {
      $title = t("J'accepte les <a href='@link' target='_blank'>conditions générales</a> d'utilisation du site", [
        '@link' => Settings::get('PAGE_CONDITION_GENERAL_URL'),
      ]);
    }

    $form['tos'] = [
      '#type' => 'checkbox',
      '#title' => $title,
      '#required' => TRUE,
      '#default_value' => TRUE,
    ];
  }

  if ($form_id === 'user_login_form') {
    if (isset($form['name']['#attributes']['autofocus'])) {
      unset($form['name']['#attributes']['autofocus']);
    }
  }

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function vactory_user_form_user_pass_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#validate'][] = '_vactory_user_pass_validate';
}

/**
 * Reset password form custom validate.
 */
function _vactory_user_pass_validate($form, FormStateInterface $form_state) {
  $form_errors = $form_state->getErrors();
  if (isset($form_errors['name'])) {
    unset($form_errors['name']);
    $form_state->clearErrors();
    if (!empty($form_errors)) {
      foreach ($form_errors as $name => $message) {
        $form_state->setErrorByName($name, $message);
      }
    }
  }
}

